// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using redeSocial.Models;

#nullable disable

namespace redeSocial_WebApplication.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("redeSocial.Models.ArquivoMidia", b =>
                {
                    b.Property<int>("arquivoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("arquivoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("arquivoID"), 1L, 1);

                    b.Property<string>("nomeArmazenamento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nomeArmazenamento");

                    b.Property<int>("postID")
                        .HasColumnType("int")
                        .HasColumnName("postID");

                    b.Property<string>("tipoArquivo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipoArquivo");

                    b.HasKey("arquivoID");

                    b.HasIndex("postID");

                    b.ToTable("ArquivoMidia");
                });

            modelBuilder.Entity("redeSocial.Models.Banimentos", b =>
                {
                    b.Property<int>("banID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("banID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("banID"), 1L, 1);

                    b.Property<int>("usuarioBanID")
                        .HasColumnType("int")
                        .HasColumnName("usuarioBanID");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int")
                        .HasColumnName("usuarioID");

                    b.HasKey("banID");

                    b.HasIndex("usuarioBanID");

                    b.HasIndex("usuarioID");

                    b.ToTable("Banimentos");
                });

            modelBuilder.Entity("redeSocial.Models.Comentario", b =>
                {
                    b.Property<int>("comentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("comentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("comentID"), 1L, 1);

                    b.Property<string>("comentario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comentario");

                    b.Property<int>("postID")
                        .HasColumnType("int")
                        .HasColumnName("postID");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int")
                        .HasColumnName("usuarioID");

                    b.Property<bool>("visible")
                        .HasColumnType("bit")
                        .HasColumnName("visible");

                    b.HasKey("comentID");

                    b.HasIndex("postID");

                    b.HasIndex("usuarioID");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("redeSocial.Models.Postagem", b =>
                {
                    b.Property<int>("postID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("postID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("postID"), 1L, 1);

                    b.Property<string>("conteudoTxt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("conteudoTxt");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int")
                        .HasColumnName("usuarioID");

                    b.HasKey("postID");

                    b.HasIndex("usuarioID");

                    b.ToTable("Postagem");
                });

            modelBuilder.Entity("redeSocial.Models.Usuario", b =>
                {
                    b.Property<int>("usuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usuarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usuarioID"), 1L, 1);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("nomeUsuario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nomeUsuario");

                    b.Property<string>("senha")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.Property<string>("telefone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefone");

                    b.HasKey("usuarioID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("redeSocial.Models.ArquivoMidia", b =>
                {
                    b.HasOne("redeSocial.Models.Postagem", "post")
                        .WithMany()
                        .HasForeignKey("postID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("post");
                });

            modelBuilder.Entity("redeSocial.Models.Banimentos", b =>
                {
                    b.HasOne("redeSocial.Models.Usuario", "usuarioBan")
                        .WithMany()
                        .HasForeignKey("usuarioBanID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("redeSocial.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuario");

                    b.Navigation("usuarioBan");
                });

            modelBuilder.Entity("redeSocial.Models.Comentario", b =>
                {
                    b.HasOne("redeSocial.Models.Postagem", "post")
                        .WithMany()
                        .HasForeignKey("postID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("redeSocial.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("post");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("redeSocial.Models.Postagem", b =>
                {
                    b.HasOne("redeSocial.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
